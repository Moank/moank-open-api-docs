openapi: 3.0.0
info:
  title: Moank Transfer of Claim API
  version: 1.0.0
  description: |
    Draft API
    The Moank Transfer of Claim API can be used by Moank's partners in order to provide financial products to their end customers within their own application/website.

    # Sequence Diagrams
    **Onboarding Creditor**

    <a href="./specifications/transfer-claim/creditor-onboarding.svg" target="_blank">![Sequence Diagram](./specifications/transfer-claim/creditor-onboarding.svg)</a>

    **Onboarding Debtor**

    <a href="./specifications/transfer-claim/debtor-onboarding.svg" target="_blank">![Sequence Diagram](./specifications/transfer-claim/debtor-onboarding.svg)</a>

    **Transfer Claim**

    <a href="./specifications/transfer-claim/transfer-claim.svg" target="_blank">![Sequence Diagram](./specifications/transfer-claim/transfer-claim.svg)</a>

servers:
- url: https://api.moank.se/api/hooks/factoring
  description: Production server
- url: https://staging.api.moank.se/api/hooks/factoring/
  description: Staging server

paths:
  /creditor:
    post:
      tags:
        - Creditor endpoints
      summary: Create new creditor
      description: Used to add a new creditor into the system. The Moank service will process it and set the business terms for it. By "creditor" is meant the current creditor of the claim before the transfer of the claim to Moank. Moank is buying the claim from the creditor. Creditors are usually merchants or other financers that issued the claim in the first place.
      requestBody:
        $ref: "#/components/requestBodies/creditorCreate"
      responses:
        200:
          $ref: '#/components/responses/creditor'
        400:
          $ref: "#/components/responses/dataError"
        409:
          $ref: "#/components/responses/conflictError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /creditor/{creditorId}:
    get:
      tags:
        - Creditor endpoints
      summary: Get creditor
      description: Used to fetch a previously created creditor and visualise the usage of the agreed terms.
      parameters:
      - name: creditorId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          $ref: '#/components/responses/creditor'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /creditor/{creditorId}/settlement/{payoutReference}:
    get:
      tags:
        - Creditor endpoints
      summary: Get settlement details for payout
      description: Used to fetch the details of a payout to the creditor.
      parameters:
        - name: creditorId
          in: path
          required: true
          schema:
            type: string
        - name: payoutReference
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/settlement'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /decision:
    post:
      tags:
        - Decision endpoints
      summary: Create new decision
      description: Request decision on a new debtor for an approved creditor.
      requestBody:
        $ref: "#/components/requestBodies/decisionCreate"
      responses:
        200:
          $ref: '#/components/responses/decision'
        400:
          $ref: "#/components/responses/dataError"
        409:
          $ref: "#/components/responses/conflictError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /decision/{decisionId}:
    get:
      tags:
        - Decision endpoints
      summary: Fetch a decision
      description: Use to retrive information on a previously created decision.
      parameters:
      - name: decisionId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          $ref: '#/components/responses/decision'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /account:
    post:
      tags:
        - Account endpoints
      summary: Create an account
      description: Used to convert a previously debtor's granted decision in an account to allow the business.
      requestBody:
        $ref: "#/components/requestBodies/accountCreate"
      responses:
        200:
          $ref: '#/components/responses/account'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /account/{accountId}:
    get:
      tags:
        - Account endpoints
      summary: Fetch an account
      description: Used to fetch a previously created account and visualise the usage of the agreed terms.
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          $ref: '#/components/responses/account'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /claim:
    post:
      tags:
        - Claim endpoints
      summary: Transfer a claim
      description: Allow the transfer of a claim between the creditor and the debtor of the account to Moank.
      requestBody:
        $ref: "#/components/requestBodies/claimCreate"
      responses:
        200:
          $ref: '#/components/responses/claim'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /claim/{claimId}:
    get:
      tags:
        - Claim endpoints
      summary: Fetch a claim
      description: Use to retrieve information on a previously created claim.
      parameters:
      - name: claimId
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          $ref: '#/components/responses/claim'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

  /payment:
    post:
      tags:
        - Payment endpoints
      summary: Register a payment from the debtor
      description: Allow the partner to notify payments from the debtors received by the creditor.
      requestBody:
        $ref: "#/components/requestBodies/paymentCreate"
      responses:
        200:
          $ref: '#/components/responses/empty'
        400:
          $ref: "#/components/responses/dataError"
        401:
          $ref: "#/components/responses/authError"
        500:
          $ref: "#/components/responses/serverError"
      security:
      - basic_auth: []

components:
  requestBodies:
    creditorCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - nationalIdentifier
              - country
              - name
              - type
              - contactEmail
              - phone
            properties:
              name:
                type: string
                description: Full legal name of the creditor
                example: Acme AB
              nationalIdentifier:
                description: National identifier of the creditor in unique per country
                type: string
                example: "5566778899"
              country:
                description: Country where the national identifier is registered
                type: string
                example: SE
              type:
                description: Type of the creditor
                type: string
                example: business
                enum:
                  - business
              contactEmail:
                type: string
                description: Email used to contact the creditor
                example: contact@creditor.com
              phone:
                type: string
                description: Phone number used to contact the creditor
                example: "+46701234567"
              mainAddress:
                type: object
                description: Address information of the creditor
                properties:
                  streetAddress:
                    type: string
                    example: Fake Street 123
                  additionalStreetAddress:
                    type: string
                    example: 8th floor
                  town:
                    type: string
                    example: Somewhere
                  postcode:
                    type: string
                    example: "12345"
              extraData:
                description: List of extra information to provide to Moank for the decision process based on the agreement
                type: array
                items:
                  type: object
                  required:
                    - dataFormat
                    - data
                  properties:
                    dataFormat:
                      type: string
                      description: Enum provided by Moank based on the agreement
                      example: "JSON-UC"
                    data:
                      description: The type and format of this field depends on the `dataFormat` value
                      type: string

    decisionCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - creditorId
            - debtors
            - product
            properties:
              creditorId:
                type: string
                description: Creditor's unique identifier in the system. Creditor to buy the claims from
                example: "123"
              debtors:
                description: List of debtors the are related to the claims to transfer. e.g. If the claim is an invoice, it will be the debtor reported in the document. If the claim is a loan with multiple applicants, the debtors will be all the applicants in the loan agreement.
                type: array
                items:
                  type: object
                  required:
                    - nationalIdentifier
                    - country
                    - name
                    - type
                    - contactEmail
                    - phone
                  properties:
                    name:
                      type: string
                      description: Full legal name of the debtor
                      example: Consumer AB
                    nationalIdentifier:
                      description: National identifier of the debtor in unique per country
                      type: string
                      example: "5544332211"
                    country:
                      description: Country where the national identifier is registered
                      type: string
                      example: SE
                    type:
                      description: Type of the debtor
                      type: string
                      example: business
                      enum:
                        - business
                        - private (deprecated)
                        - consumer
                    contactEmail:
                      type: string
                      description: Email used to contact the debtor
                      example: contact@debtor.com
                    phone:
                      type: string
                      description: Phone number used to contact the creditor
                      example: "+46701234567"
                    mainAddress:
                      type: object
                      description: Address information of the debtor
                      properties:
                        streetAddress:
                          type: string
                          example: Overthere 32
                        additionalStreetAddress:
                          type: string
                          example: 2th floor
                        town:
                          type: string
                          example: Nicetown
                        postcode:
                          type: string
                          example: "54321"
                    extraData:
                      description: List of extra information to provide to Moank for the decision process based on the agreement
                      type: array
                      items:
                        type: object
                        required:
                          - dataFormat
                          - data
                        properties:
                          dataFormat:
                            type: string
                            description: Enum provided by Moank based on the agreement
                            example: "JSON-UC"
                          data:
                            description: The type and format of this field depends on the `dataFormat` value
                            type: string
              product:
                type: object
                required:
                  - productId
                  - currency
                properties:
                  productId:
                    description: Unique identifier of the requested product received by moank
                    type: string
                    example: "FI-TPC-123"
                  currency:
                    description: Requested currency for the business terms in ISO 4217 format
                    type: string
                    example: SEK

    accountCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - decisionId
            properties:
              decisionId:
                type: string
                description: Decision's unique identifier
                example: "123"

    claimCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
            - accountId
            - lineItems
            - financing
            properties:
              accountId:
                type: string
                description: Account's unique identifier. This identify the creditor and debtor(s) connected to the claim
                example: "123"
              lineItems:
                type: array
                items:
                  type: object
                  required:
                    - amount
                    - vatAmount
                    - vatPercent
                    - unit
                    - quantity
                    - description
                  properties:
                    amount:
                      type: number
                      description: Amount of the single article per unit including VAT
                      example: 10000
                      minimum: 0
                    quantity:
                      type: number
                      description: Number of item with the same article number
                      example: 2
                      minimum: 0
                    vatPercent:
                      type: number
                      description: Vat percentage applied to the article as integer
                      example: 25
                      minimum: 0
                    vatAmount:
                      type: number
                      description: Vat amount of the article per unit
                      example: 2500
                      minimum: 0
                    description:
                      type: string
                      description: Extended description of the article
                      example: "Potato"
                    unit:
                      type: string
                      description: The unit measurement of the article. This is used to have a better description when the article is not a single countable object
                      example: "kilogram"
              extra:
                type: object
                properties:
                  claimReference:
                    description: Creditor unique reference of the claim. e.g. If an invoice is the transfered claim, the identifier is the payment reference of the invoice issued by the creditor
                    example: 'CLM-2023-001'
                  issueDate:
                    description: Date when the claim has been issued by the creditor in ISO format
                    example: '2023-04-25T08:00:00.000Z'
                  termsOfPayment:
                    description: Repayment period of the claim from the issued date
                    example: 60
              financing:
                type: object
                properties:
                  amount:
                    description: Amount to finance of the claim total amount
                    minimum: 0
                    example: 18000
                  ltv:
                    description: Percentage to finance of the claim total amount
                    minimum: 0
                    example: 90

    paymentCreate:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - bankReferenceId
              - transactionDate
              - transactionAmount
              - currency
              - payerName
            properties:
              accountId:
                type: string
                description: Account's unique identifier. This identify the creditor and debtor(s) connected to the claim. One between `accountId` and `claimId` need to be defined
                example: "123"
              claimId:
                type: string
                description: Claim's unique identifier. This identify the claim to report the payment into. One between `accountId` and `claimId` need to be defined
                example: "123"
              bankReferenceId:
                type: string
                description: Unique identifier of the transaction from the Creditor's bank
                example: "0001"
              transactionDate:
                type: string
                description: Date when the payment has been received by the creditor in ISO format
                example: "2023-04-28T12:18:06.849Z"
                format: date
              transactionAmount:
                type: number
                description: Amout of the payment received by the creditor
                example: 1000
              currency:
                type: string
                description: Currency of the payment received by the creditor in ISO 4217 format
                example: "EUR"
              payerName:
                type: string
                description: Name received in the payment datails
                example: "Debtor AB"

  responses:
    empty:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object

    creditor:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - nationalIdentifier
              - country
              - name
              - type
              - status
              - contactEmail
              - phone
            properties:
              id:
                type: string
                description: Creditor's unique identifier in the system. Creditor to buy the claims from
                example: "123"
              name:
                type: string
                description: Full legal name of the creditor
                example: Acme AB
              nationalIdentifier:
                description: National identifier of the creditor in unique per country
                type: string
                example: "5566778899"
              country:
                description: Country where the national identifier is registered
                type: string
                example: SE
              type:
                description: Type of the creditor
                type: string
                example: business
                enum:
                  - business
              status:
                description: Status of creditor decision
                type: string
                example: pending
                enum:
                  - denied
                  - pending
                  - granted
              contactEmail:
                type: string
                description: Email used to contact the creditor
                example: contact@creditor.com
              phone:
                type: string
                description: Phone number used to contact the creditor
                example: "+46701234567"
              mainAddress:
                type: object
                description: Address information of the creditor
                properties:
                  streetAddress:
                    type: string
                    example: Fake Street 123
                  additionalStreetAddress:
                    type: string
                    example: 8th floor
                  town:
                    type: string
                    example: Somewhere
                  postcode:
                    type: string
                    example: "12345"
              terms:
                type: object
                description: Terms about the business agreement with Moank
                properties:
                  financingLimit:
                    type: number
                    example: 10000
                  usedFinancingLimit:
                    type: number
                    example: 1000
                  usedFinancingLimitPercentage:
                    type: number
                    example: 10
                  currency:
                    type: string
                    description: In ISO 4217 format
                    example: SEK

    settlement:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - financer
              - currency
              - createdAt
              - closedAt
              - payoutReference
              - transactions
            properties:
              financer:
                description: Name that should appear on the bank transaction received by the creditor.
                type: string
                example: Moank AB
              currency:
                  type: string
                  description: Currency of the payment received by the creditor in ISO 4217 format
                  example: "SEK"
              createdAt:
                description: Date the transactions started to accumulate towards the settlement
                type: string
                example: '2023-04-28T12:18:06.849Z'
                format: date
              closedAt:
                description: Date the payout was issued
                type: string
                example: '2023-04-28T12:18:06.849Z'
                format: date
              payoutReference:
                description: The payout reference
                type: string
                example: 'A fancy reference'
              transactions:
                type: array
                description: Transactions that lead to the settlement
                items:
                  type: object
                  required:
                    - amount
                    - date
                    - description
                  properties:
                    amount:
                      type: number
                      description: Amount of the transaction
                      example: '10000'
                    date:
                      description: Date the transaction
                      type: string
                      example: '2023-04-28T12:18:06.849Z'
                      format: date
                    description:
                      description: Details explanation of the reason for the transaction
                      type: string
                      example: 'A fancy description'


    decision:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
            - id
            - debtors
            - creditorId
            - decision
            properties:
              id:
                type: string
                description: Decision's unique identifier
                example: "123"
              creditorId:
                type: string
                description: Creditor's unique identifier in the system. Creditor to buy the claims from
                example: "123"
              debtors:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - nationalIdentifier
                    - country
                    - name
                    - type
                    - contanctEmail
                    - phone
                  properties:
                    id:
                      type: string
                      description: Debtor's unique identifier
                      example: "123"
                    name:
                      type: string
                      description: Full business name of the creditor
                      example: Debtor AB
                    nationalIdentifier:
                      type: string
                    country:
                      type: string
                    type:
                      type: string
                    contactEmail:
                      type: string
                      description: Email used to contact the debtor
                      example: contact@debtor.com
                    phone:
                      type: string
                      description: Phone number used to contact the debtor
                      example: "+46701234567"
                    mainAddress:
                      type: object
                      description: Address information of the debtor
                      properties:
                        streetAddress:
                          type: string
                          example: Overthere 32
                        additionalStreetAddress:
                          type: string
                          example: 2th floor
                        town:
                          type: string
                          example: Nicetown
                        postcode:
                          type: string
                          example: "54321"
              decision:
                type: object
                required:
                  - status
                  - terms
                  - currency
                properties:
                  status:
                    description: Status of the decision process
                    type: string
                    example: granted
                    enum:
                      - granted
                      - referred
                      - denied
                  currency:
                    description: Currency for the business terms in ISO 4217 format
                    type: string
                    example: SEK
                  terms:
                    type: object
                    description: Terms about the business agreement with Moank
                    properties:
                      limit:
                        type: number
                      maxLTV:
                        type: number

    account:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
            - id
            - debtors
            - creditorId
            - terms
            - usage
            properties:
              id:
                type: string
                description: Account's unique identifier
                example: "123"
              creditorId:
                type: string
                description: Creditor's unique identifier in the system. Creditor to buy the claims from
                example: "123"
              debtors:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - nationalIdentifier
                    - country
                    - name
                    - type
                    - contanctEmail
                    - phone
                  properties:
                    id:
                      type: string
                      description: Debtor's unique identifier
                      example: "123"
                    name:
                      type: string
                      description: Full business name of the creditor
                      example: Debtor AB
                    nationalIdentifier:
                      type: string
                    country:
                      type: string
                    type:
                      type: string
                    contactEmail:
                      type: string
                      description: Email used to contact the debtor
                      example: contact@debtor.com
                    phone:
                      type: string
                      description: Phone number used to contact the debtor
                      example: "+46701234567"
                    mainAddress:
                      type: object
                      properties:
                        streetAddress:
                          type: string
                        additionalStreetAddress:
                          type: string
                        town:
                          type: string
                        postcode:
                          type: string
              terms:
                type: object
                description: Terms about the business agreement with Moank
                required:
                  - limit
                  - maxLTV
                  - currency
                properties:
                  limit:
                    example: 10000
                    type: number
                    minimum: 0
                  maxLTV:
                    type: number
                    example: 5000
                    minimum: 0
                  currency:
                    description: Requested currency for the business terms in ISO 4217 format
                    type: string
                    example: SEK
              usage:
                type: object
                description: Information about the current usage of the agreeded terms
                required:
                  - usedLimit
                  - currentLTV
                properties:
                  usedLimit:
                    type: number
                    minimum: 0
                    example: 4000
                  currentLTV:
                    type: number
                    description: In percentage
                    example: 70
                    minimum: 0
                    maximum: 100

    claim:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
            - id
            - accountId
            - lineItems
            - financing
            - claimStatus
            properties:
              id:
                type: string
                description: Claim's unique identifier. This identify the claim and could be used in a later stage to report a payment on it
                example: "123"
              accountId:
                type: string
                description: Account's unique identifier. This identify the creditor and debtor(s) connected to the claim
                example: "123"
              lineItems:
                type: array
                items:
                  type: object
                  required:
                    - amount
                    - vatAmount
                    - vatPercentage
                    - unit
                    - quantity
                    - description
                  properties:
                    amount:
                      type: number
                      description: Amount of the single article per unit including VAT
                      example: 10000
                      minimum: 0
                    quantity:
                      type: number
                      description: Number of item with the same article number
                      example: 2
                      minimum: 0
                    vatPercent:
                      type: number
                      description: Vat percentage applied to the article as integer
                      example: 25
                      minimum: 0
                    vatAmount:
                      type: number
                      description: Vat amount of the article per unit
                      example: 2500
                      minimum: 0
                    description:
                      type: string
                      description: Extended description of the article
                      example: "Potato"
                    unit:
                      type: string
                      description: The unit measurement of the article. This is used to have a better description when the article is not a single countable object
                      example: "kilogram"
              financing:
                type: object
                properties:
                  financingStatus:
                    type: string
                    description: Status of the claim financing
                    enum:
                      - referred
                      - granted
                      - denied
                    example: granted
                  amount:
                    description: Amount to finance of the claim total amount
                    minimum: 0
                    example: 18000
                  ltv:
                    description: Percentage to finance of the claim total amount
                    minimum: 0
                    example: 90
              claimStatus:
                type: string
                description: Status of claim
                enum:
                  - paid
                  - waiting-for-payment
                  - not-invoiced
                  - late
                example: not-invoiced
              extra:
                type: object
                properties:
                  claimReference:
                    type: string
                    description: Creditor unique reference of the claim. e.g. If an invoice is the transfered claim, the identifier is the payment reference of the invoice issued by the creditor
                    example: CLM-2023-001
                  termsOfPayment:
                    type: number
                    description: Repayment period of the claim from the issued date
                    example: 60
                  issueDate:
                    type: string
                    description: Date when the claim has been issued by the creditor in ISO format
                    example: '2023-04-28T12:18:06.849Z'
                    format: date
    dataError:
      description: Invalid data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/dataError"

    conflictError:
      description: Request cannot be process due to conflicts between data in the request and data in the system
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/conflictError"

    authError:
      description: Invalid authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/authError"

    notFoundError:
      description: Application not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/notFoundError"

    serverError:
      description: Internal Server Error. If the problem persists contact the technical support
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/serverError"

    serviceError:
      description: Service Error. If the problem persists contact the technical support
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/serviceError"

  schemas:
    error:
      type: object
      required:
      - status
      - message
      - errors
      properties:
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Main error reason
        errors:
          type: array
          description: List of errors messages to describe the issue in more details
          items:
            type: string
        details:
          type: array
          items:
            type: object
            description: Details of the error with additional information based on the error code
            oneOf:
              - $ref: '#/components/schemas/defaultDetail'
              - $ref: '#/components/schemas/duplicatedIdentifierDetail'

    dataError:
      allOf:
        - $ref: "#/components/schemas/error"
        - type: object
          properties:
            status:
              example: 400
            message:
              example: Data Error
            errors:
              type: array
              items:
                example: Field ... should be defined

    conflictError:
      allOf:
        - $ref: "#/components/schemas/error"
        - type: object
          properties:
            status:
              example: 409
            message:
              example: Conflict

    authError:
      allOf:
        - $ref: "#/components/schemas/error"
        - type: object
          properties:
            status:
              example: 401
            message:
              example: Unauthorized

    notFoundError:
      allOf:
        - $ref: "#/components/schemas/error"
        - type: object
          properties:
            status:
              example: 404
            message:
              example: Application not found

    serverError:
      allOf:
        - $ref: "#/components/schemas/error"
        - type: object
          properties:
            status:
              example: 500
            message:
              example: Internal Server Error

    serviceError:
      allOf:
        - $ref: "#/components/schemas/error"
        - type: object
          properties:
            status:
              example: 503
            message:
              example: Service unavailable

    defaultDetail:
      type: object
      required:
      - description
      properties:
        description:
          type: string
          description: Field ... should be defined

    duplicatedIdentifierDetail:
      type: object
      required:
      - description
      - code
      - extra
      properties:
        description:
          type: string
          description: Creditor already existing in the system
        code:
          type: string
          example: duplicated-identifier
        extra:
          type: object
          required:
            - resourceId
          properties:
            resourceId:
              type: string
              description: Id of the resource already existing with the same identifier sent in the request


  securitySchemes:
    basic_auth:
      type: "http"
      scheme: "basic"
